// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/ports/enricher/enricher.go

// Package mock_enricher is a generated GoMock package.
package mock_enricher

import (
	context "context"
	reflect "reflect"

	enricher "github.com/Kosodaka/enricher-service/internal/domain/ports/enricher"
	gomock "github.com/golang/mock/gomock"
)

// MockEnricher is a mock of Enricher interface.
type MockEnricher struct {
	ctrl     *gomock.Controller
	recorder *MockEnricherMockRecorder
}

// MockEnricherMockRecorder is the mock recorder for MockEnricher.
type MockEnricherMockRecorder struct {
	mock *MockEnricher
}

// NewMockEnricher creates a new mock instance.
func NewMockEnricher(ctrl *gomock.Controller) *MockEnricher {
	mock := &MockEnricher{ctrl: ctrl}
	mock.recorder = &MockEnricherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnricher) EXPECT() *MockEnricherMockRecorder {
	return m.recorder
}

// Enrich mocks base method.
func (m *MockEnricher) Enrich(arg0 context.Context, arg1 string) (*enricher.EnrichData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Enrich", arg0, arg1)
	ret0, _ := ret[0].(*enricher.EnrichData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Enrich indicates an expected call of Enrich.
func (mr *MockEnricherMockRecorder) Enrich(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enrich", reflect.TypeOf((*MockEnricher)(nil).Enrich), arg0, arg1)
}
